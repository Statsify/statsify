{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest"
  },
  "env": {
    "commonjs": true,
    "es2022": true,
    "node": true
  },
  "plugins": ["@typescript-eslint", "license-header", "sort-imports-es6-autofix", "unused-imports"],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended",
    "plugin:unicorn/recommended"
  ],
  "rules": {
    "license-header/header": [
      "error",
      [
        "/**",
        " * Copyright (c) Statsify",
        " *",
        " * This source code is licensed under the GNU GPL v3 license found in the",
        " * LICENSE file in the root directory of this source tree.",
        " * https://github.com/Statsify/statsify/blob/main/LICENSE",
        " */"
      ]
    ],
    "@typescript-eslint/ban-ts-comment": [
      "error",
      {
        "minimumDescriptionLength": 3,
        "ts-check": true,
        "ts-expect-error": "allow-with-description",
        "ts-ignore": "allow-with-description",
        "ts-nocheck": true
      }
    ],
    "@typescript-eslint/default-param-last": ["error"],
    "@typescript-eslint/explicit-member-accessibility": ["error"],
    "@typescript-eslint/member-ordering": [
      "error",
      {
        "default": [
          "signature",
          "public-instance-field",
          "protected-instance-field",
          "private-instance-field",
          "instance-field",
          "public-static-field",
          "protected-static-field",
          "private-static-field",
          "static-field",
          "public-constructor",
          "protected-constructor",
          "private-constructor",
          "constructor",
          "public-instance-method",
          "protected-instance-method",
          "private-instance-method",
          "instance-method",
          "public-static-method",
          "protected-static-method",
          "private-static-method",
          "static-method"
        ]
      }
    ],
    "@typescript-eslint/no-explicit-any": ["off"],
    "@typescript-eslint/no-non-null-assertion": ["off"],
    "@typescript-eslint/no-unused-vars": ["off"],
    "unused-imports/no-unused-imports": "error",
		"unused-imports/no-unused-vars": [
			"error",
			{ "vars": "all", "varsIgnorePattern": "^_", "args": "after-used", "argsIgnorePattern": "^_" }
		],
    "arrow-body-style": ["error", "as-needed"],
    "no-constant-binary-expression": ["error"],
    "no-constructor-return": ["error"],
    "no-duplicate-imports": ["error"],
    "no-extra-semi": ["error"],
    "no-floating-decimal": ["error"],
    "no-lonely-if": ["error"],
    "object-shorthand": ["error", "always"],
    "one-var": ["error", "never"],
    "prefer-template": ["error"],
    "sort-imports-es6-autofix/sort-imports-es6": [
      "error",
      {
        "ignoreCase": false,
        "ignoreMemberSort": false,
        "memberSyntaxSortOrder": ["all", "single", "multiple", "none"]
      }
    ],
    "unicorn/no-unsafe-regex": ["warn"],
    "unicorn/prefer-at": ["error"],
    "unicorn/relative-url-style": ["error", "always"],
    "unicorn/import-style": [
      "error",
      {
        "styles": {
          "node:path": {
            "named": true,
            "default": false
          }
        }
      }
    ],
    "unicorn/prefer-string-replace-all": ["off"],
    "unicorn/filename-case": ["off"],
    "unicorn/no-static-only-class": ["off"],
    "unicorn/no-process-exit": ["off"],
    "unicorn/no-object-as-default": ["off"],
    "unicorn/no-null": ["off"],
    "unicorn/no-array-reduce": ["off"],
    "unicorn/prevent-abbreviations": ["off"],
    "unicorn/no-array-callback-reference": ["off"],
    "unicorn/explicit-length-check": ["off"],
    "unicorn/escape-case": ["off"],
    "unicorn/no-useless-undefined": ["off"],
    "unicorn/catch-error-name": ["off"],
    "unicorn/no-nested-ternary": ["off"],
    "unicorn/no-array-for-each": ["off"],
    "unicorn/no-await-expression-member": ["off"],
    "unicorn/no-array-push-push": ["off"],
    "unicorn/number-literal-case": ["off"],
    "unicorn/consistent-destructuring": ["off"],
    "unicorn/no-useless-switch-case": ["off"],
    "unicorn/better-regex": ["off"],
    "unicorn/prefer-module": ["off"]
  }
}
